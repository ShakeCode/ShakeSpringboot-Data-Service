server:
  context-path: /data
  port: 8019
    #证书的路径.
  ssl:
      #是否开启https
      enabled: true
      key-store: classpath:keystore.p12
      #证书密码，请修改为您自己证书的密码.
      key-store-password: 475996
      #秘钥库类型(PKCS12,JKS)
      key-store-type: PKCS12
      #证书别名
      key-alias: tomcat
  
spring:
  application:
    name: data.center.service
  cache:
    type: ehcache
    ehcache:
      config: ehcache.xml
  redis:
    #默认选择0数据库
    database: 10
    host: 127.0.0.1
    password:
    port: 6379
    jedis:
      pool:
        #连接池最大连接数(使用负值表示没有限制)
        max-active: 50
        #连接池最大阻塞等待时间(使用负值表示没有限制)
        max-wait: -1s
        #连接池中的最大空闲连接
        max-idle: 500
        #连接池中的最小空闲连接
        min-idle: 50
    # 连接超时时间(毫秒)
    timeout: 30000

  datasource:
    switch: true
    #dao层包路径
    mapper-dao-path: com.data.dao
    #mapper-xml路径
    mapper-location-path: classpath*:mapper/*/*.xml
    ds:
      - key: master
        # 数据源类型
        type: com.zaxxer.hikari.HikariDataSource
        #type: com.alibaba.druid.pool.DruidDataSource
        #driver-class-name: com.mysql.jdbc.Driver
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:5306/stu_learning_system?autoReconnect=true&useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&serverTimezone=UTC&useSSL=false&connectTimeout=1000&socketTimeout=3000
        username: root
        password: root

      - key: custer
        # 数据源类型
        #type: com.zaxxer.hikari.HikariDataSource
        type: com.alibaba.druid.pool.DruidDataSource
        #driver-class-name: com.mysql.jdbc.Driver
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:5306/onlinemusic?autoReconnect=true&useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&serverTimezone=UTC&useSSL=false&connectTimeout=1000&socketTimeout=3000
        username: root
        password: root

    # 初始连接数
    initial-size: 5
    # 最小连接池数量
    min-idle: 10
    # 最大连接池数量
    max-active: 20
    # 获取连接等待超时的时间
    max-wait: 60000
    # 检测间隔时间，检测需要关闭的空闲连接，单位:毫秒
    time-between-eviction-runs-millis: 60000
    # 一个连接在连接池中最小的生存时间, 连接保持空闲而不被驱逐的最小时间(单位:毫秒)
    min-evictable-idle-time-millis: 30000
    # 一个连接在连接池中最大的生存时间(单位毫秒)
    max-evictable-idle-time-millis: 90000
    # 验证数据库服务可用性的sql.用来检测连接是否有效的sql 因数据库方言而差, 例如 oracle 应该写成 SELECT 1 FROM DUAL
    validation-query: SELECT 1 FROM DUAL
    # 申请连接时直接检测连接是否有效.申请连接时执行validationQuery检测连接是否有效(降低性能)
    test-on-borrow: false
    # # 归还连接时检测连接是否有效.归还连接时执行validationQuery检测连接是否有效(降低性能)
    test-on-return: false
    # # 申请连接时检测空闲时间，根据空闲时间再检测连接是否有效.建议配置为true(不影响性能，并且保证安全性,申请连接的时候检测,如果空闲时间大于timeBetweenEvictionRun)
    test-while-idle: true
    # 开启PSCache
    poolPreparedStatements: true
    # 设置PSCache值
    maxOpenPreparedStatements: 20
    # 连接出错后再尝试连接三次
    connectionErrorRetryAttempts: 3
    # 数据库服务宕机自动重连机制
    breakAfterAcquireFailure: true
    # 连接出错后重试时间间隔  (单位毫秒)
    timeBetweenConnectErrorMillis: 300000
    # 异步初始化策略
    asyncInit: false
    # 是否自动回收超时连接
    remove-abandoned: true
    # 超时时间(以秒数为单位)
    remove-abandoned-timeout: 1800
    # 事务超时时间
    transaction-query-timeout: 60000
     # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    druid:
      web-stat-filter:
        enabled: true
        url-pattern: "/*"
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico"
      stat-view-servlet:
        enabled: true
        # 设置白名单，缺省为所有
        allow:
        url-pattern: /druid/*
        # 登录用户名及密码
        login-username: melody
        login-password: melody
      filter:
        # 开启统计功能
        stat:
          enabled: true
          db-type: mysql
          # 开启慢查询功能
          log-slow-sql: true
          #毫秒
          slow-sql-millis: 1000
          # 合并多SQL
          merge-sql: true
        # 开启防火墙功能
        wall:
          enabled: true
          config:
            # 允许多语句同时执行
            multi-statement-allow: true

  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+0

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    virtual-host: /
    username: guest
    password: guest
    listener:
      simple:
        # 消息握手方式
        acknowledge-mode: manual
        # 每次队列获取消息数量
        prefetch: 250
        # 开启批量消费
        consumer-batch-enabled: true
        # 每次批量消费大小
        batch-size: 16


sync.init:
  open: false
  cron: 0/1 * * * * ?

logging:
  config: classpath:logback-spring.xml
  level:
    #日志级别
    root: info
    com.data.dao: debug
  file:
    logName: data-service-log
    max-history: 10
    max-size: 1KB

spring.main.allow-bean-definition-overriding: true

#spring.mail.host=smtp.163.com
#spring.mail.username=903936584@qq.com
#spring.mail.password=xxxxxxxxx
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true



